Abstract:
----------------------------------------------------
RealOffice is an application software intended for use in the CSE department office to simplify routine procedural tasks. In essence, it shall allow office staff to schedule different kinds of meetings, track meeting requirements, manage room allotments, file meeting reports and cancel arrangements for cancelled meetings. It also reminds the staff regarding upcoming events that need attention and facilitates routine backups as replacement for hard paperwork. The protocols used by the CSE department office can be easily adapted to a digitized workflow. This document proceeds to build the requirements for such a system, highlighting the current workflow and possibilities for the upcoming software project.

Keywords:
??

Introduction
------------------------------------------------------------
RealOffice is a software primarily intended for use by department office staff to schedule different kinds of meetings: research scholar meetings, faculty meetings, project evaluations, poster evaluations, visitor seminars, lectures(regular and invited), selection examinations etc. and to manage the unique requirements for each meeting and appropriately allot venues. The project shall allow extensive reporting and backup facilities. The focus for this project has been the CSE department office but it may be generalized to suit any generic office. 

The software shall allow the administrator to input department details: rooms and their infrastructure support, participating entities like faculty, student and staff members along with time schedules. It shall provide a web interface for scheduling meetings (periodic and non-periodic) and requesting infrastrcuture and resource support.

<Data storage backup medium?>

There are other software products like Taskworld available of-the-shelf but are much more complex and overkill for the intended purpose. The product is designed with a minimal philosophy and is intended to be used with minimal user training.

The software engineering process adopted is an agile approach with incremental development. The database will be modelled using ER diagrams and will be translated to a relational database framework. UML will be used to mode use cases and scenarios and develop the system architecture.

The remainder of the document will focus on 
	 i. General description(user requirements)
	ii. system requirements(functional and non-functional)
   iii. use cases and scenarios, 
    iv. architecture (er diagram, class models, etc)

General description(user requirements)
-------------------------------------------------------------
The main purpose of the software is to automate CSE department office processes which includes scheduling meetings and courses. The CSE Department Office deals with students, faculty members, and staff members and organises different kinds of meetings- lectures (regular and invited), student evaluations of batches, individual student evaluations, faculty meetings, etc. These meetings  require different kinds of resources - stationery, snacks, student files, evaluations, classrooms with specific infrastructure etc. This software project shall enable the office staff to schedule the meeting and track the kinds of resources and numbers required, and book rooms for one meeting or for periodic sessions.  

System Specification
-------------------------------------------------------------

Functional Requirements:
========================
 1. Should allow configuration
	a. Infrastructure(venue)
	b. Users
 2. Allow scheduling of periodic/non-periodic meetings 
    	i) Case where a valid schedule can't be generated, user shall be notified with appropriate reason
	ii) This includes all the resources: time, meeting room, participants' availability etc
 3. Allow meetings requirements to be entered (see status SCHEDULING) 
 4. Auto-add reminders for requirements satisfaction and validation/checking/testing prior to meeting (see status PREPPING)
 5. Send reminders to meeting participants (see status PREPPED)
 6. Auto-demand report submission, signature forms etc. (see status POST_MEETING)
 7. Allow report generation (see status FINISHED)
 8. Manage cancellation workflow for meetings (see status CANCELLING)
 9. Allow backup generation 
10. Allow courses(recurring/periodic meetings to be alloted) (see status RECURRING)
11.  

States of a meeting - SCHEDULING, SCHEDULED, PREPPING, PREPPED, RUNNING, POST_MEETING, FINISHED, CANCELLING, CANCELLED, RECURRING

Non-Functional Requirements:
============================
1. Software should not use any proprietary code.
2. Should be platform independent and run in web interfaces.
3. Should be reliable and secure.
